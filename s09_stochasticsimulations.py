# -*- coding: utf-8 -*-
"""S09-StochasticSimulations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BTPr5-vZZU7MU8LASzaTQrBQzUJsZLod

# Compute pi !

**Method 1: Use integrate from `scipy`**
"""

import scipy.integrate as intg
import math 

def f(x):
  return math.sqrt(1-x**2)

result = intg.quad(f,0,1)
print(result[0]*4)

"""**Method 2: Compute Integration**"""

import numpy as np

def f(x):
  return np.sqrt(1-x**2)


d = 0.000001

x = np.arange(0,1+d,d)
y = f(x)

a = np.sum(d*y)*4

print(a)

"""**Stochastic computation**"""

import numpy as np
from numpy import random

n = 100_000_000

x = random.rand(n)*2-1

y = random.rand(n)*2-1

r = np.sqrt(x**2+y**2)

print(np.count_nonzero(r<=1)/n*4)

"""**QuantEcon: 8.14. A Mixed Discrete-Continuous Distribution**"""

import numpy.random as random

n = 10_000_000

t = random.rand(n)

x = np.zeros(n)

x[t<0.95] = 0
x[t>=0.95]=random.rand(len(t[t>=0.95]))*(400-300)+300

print(np.mean(x))
print(np.var(x))